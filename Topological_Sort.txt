vector<int> topological_sort(const vector< vector<int> > &adj) {
	vector<int> order;
	vector<int> in_degree(adj.size(), 0);
	for(int i = 0; i < adj.size(); i ++) {
		for(int node : adj[i]) {
			in_degree[node] ++;
		}
	}
	for(int i = 0; i < in_degree.size(); i ++) {
		if(in_degree[i] == 0) {
			order.push_back(i);
		}
	}
	int current = 0;
	for(int i = 0; i < order.size(); i ++) {
		int node = order[current ++];
		for(int nebr : adj[node]) {
			in_degree[nebr] --;
			if(in_degree[nebr] == 0) {
				order.push_back(nebr);
			}
		}
	}
	return order;
}

// Practice Problem: https://codeforces.com/contest/1385/problem/E
// Solution: https://codeforces.com/contest/1385/submission/87185354